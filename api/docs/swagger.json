{
    "swagger": "2.0",
    "info": {
        "description": "API for login processing using JWT. Developed in Go langage.",
        "title": "JWT-login-example",
        "contact": {},
        "license": {
            "name": "MIT",
            "url": "https://github.com/tcnksm/tool/blob/master/LICENCE"
        },
        "version": "1.0.0"
    },
    "host": "http://localhost:8081",
    "basePath": "/",
    "paths": {
        "/account/login": {
            "post": {
                "description": "JWT certification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "If the infomation passed in the request body matches the data in the table, a cookie will be issued.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Account"
                        }
                    }
                }
            }
        },
        "/account/logout": {
            "post": {
                "description": "JWT certification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "If the cookie exists, delete it.",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/account/nowuser": {
            "get": {
                "description": "Browse Account table.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Show infomation about the currently logged in user.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Account"
                        }
                    }
                }
            }
        },
        "/account/signup": {
            "post": {
                "description": "Use the account table.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Register Account infomation in the database.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Account"
                        }
                    }
                }
            }
        },
        "/diary": {
            "post": {
                "description": "Can be executed only at login.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "diary"
                ],
                "summary": "Diary registratinon process.",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/diary/:id": {
            "get": {
                "description": "Can be executed only at login.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "diary"
                ],
                "summary": "Processing to display diary",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Diary"
                        }
                    }
                }
            },
            "delete": {
                "description": "Can be executed only at login.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "diary"
                ],
                "summary": "Process to delete diary.",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Account": {
            "type": "object",
            "properties": {
                "create_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "models.Diary": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "create_at": {
                    "type": "string"
                },
                "delete_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "uid": {
                    "type": "string"
                },
                "update_at": {
                    "type": "string"
                }
            }
        }
    }
}